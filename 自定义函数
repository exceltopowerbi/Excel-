' 自定义函数大全
Function Getstring(Value As String, index As Long) As String
    Dim 数字 As String, 中文 As String, 英文字符 As String, St As String
    lth = Len(Value)
    For x = 1 To lth
        St = VBA.Mid(Value, x, 1)
        If VBA.IsNumeric(St) = True Then 数字 = 数字 & St
        If Len(St) <> LenB(StrConv(St, vbFromUnicode)) Then 中文 = 中文 & St
        If Len(St) = LenB(StrConv(St, vbFromUnicode)) And VBA.IsNumeric(St) = False Then 英文字符 = 英文字符 & St
    Next x
    If index = 1 Then Getstring = 数字
    If index = 2 Then Getstring = 中文
    If index = 3 Then Getstring = 英文字符
    'index=1 ,提取数字，
    'index=2 ,提取中文，
    'index=3 ,提取英文，
End Function
Sub Getstring函数帮助()
  Dim 函数名称 As String  '函数名称
  Dim 函数描述 As String  '函数描述
  Dim 函数类别 As String  '函数类别
  Dim 参数个数(2) As String '函数参数描述 数组 个数
  函数名称 = "Getstring"
  函数描述 = "用来分离英文字符，中文字符及数字的自定义函数"
  函数类别 = "自定义函数：文本处理"
  参数个数(0) = "需要处理的字符串"
  参数个数(1) = "指定需要分离的字符串类型：" & Chr(13) & "1:提取数字; 2:提取中文; 3:提取英文。"
  Call Application.MacroOptions(Macro:=函数名称, Description:=函数描述, Category:=函数类别, ArgumentDescriptions:=参数个数)
End Sub
'简称查找全称
Function JcLook(ByVal lookup_value As String, ByVal lookup_range As Range) As String
    Dim Rg As Range
    Dim l As Integer
    Dim x As Integer
    Dim St As String
    Dim PPD
    l = Len(lookup_value)
    For Each Rg In lookup_range.Cells
        PPD = 0
        For x = 1 To l
            St = VBA.Mid(lookup_value, x, 1)
            rst = InStr(1, Rg.Value, St, 1)
            If rst Then PPD = 1 / l + PPD
        Next x
        If PPD >= 0.999999 Then Look = Look & ";" & Rg.Value
    Next
    If Look = "" Then
        JcLook = "没有找到"
    Else
        JcLook = Right(Look, Len(Look) - 1)
    End If
End Function
'全称查找简称
Function JLook(ByVal lookup_value As String, ByVal lookup_range As Range) As String

    Dim Rg As Range
    Dim l As Integer
    Dim x As Integer
    Dim St As String
    Dim PPD
    For Each Rg In lookup_range.Cells
        PPD = 0
        l = Len(Rg)
        For x = 1 To l
            St = VBA.Mid(Rg, x, 1)
            rst = InStr(1, lookup_value, St, 1)
            If rst Then PPD = 1 / l + PPD
        Next x
        If PPD >= 0.999999 Then Look = Look & ";" & Rg.Value
    Next
    If Look = "" Then
        JLook = "没有找到"
    Else
        JLook = Right(Look, Len(Look) - 1)
    End If
End Function
'根据编码规则进行解码
 Function JM(ByVal Sorcecode As String) As String
    Dim x As Integer
    Dim St As String
        For x = 1 To Len(Sorcecode)
            St = VBA.Mid(Sorcecode, x, 1)
            Select Case St
            Case 0: BM = 8
            Case 1: BM = 5
            Case 2: BM = 2
            Case 3: BM = 7
            Case 4: BM = 4
            Case 5: BM = 1
            Case 6: BM = 9
            Case 7: BM = 6
            Case 8: BM = 3
            Case 9: BM = 0
            End Select
            JM = JM & BM
        Next x
End Function

'查找一个字符串在另一个字符串中出现的个数
Function PPGS(ByVal findvalue As String, PPvalue As Range) As Long
    For x = 1 To Len(findvalue)
        If InStr(1, PPvalue, VBA.Mid(findvalue, x, 1), 1) Then PPGS = PPGS + 1
    Next x
End Function
'实现简单的中英互译
Public Function FY(ByRef words As String) As String
URL = "http://fanyi.youdao.com/translate&i="
URL2 = "&doctype=xml"
URL = URL & words & URL2
xmlpath = "//translation"
FY = Application.WorksheetFunction.FilterXML(Application.WorksheetFunction.WebService(URL), xmlpath)
End Function



Sub ExcelVBA调用M函数方法()

    Dim Mfunc As String
    Dim queryname As String
        queryname = "随机姓名8"
        
        Mfunc = Mfunc & "let" & Chr(13)
        Mfunc = Mfunc & "源 = Table.FirstN(Table.ExpandTableColumn(Table.FromList(Web.Page(Web.Contents(""https://www.qmsjmfb.com/"")){0}[Data]{0}[Children]{2}[Children]{5}[Children]{0}[Children][Children], Splitter.SplitByNothing(), null, null, ExtraValues.Error), ""Column1"", {""Text""}, {""姓名""}),20)" & Chr(13)
        Mfunc = Mfunc & "in" & Chr(13)
        Mfunc = Mfunc & "源" & Chr(13)
        
        ActiveWorkbook.Queries.Add Name:=queryname, Formula:=Mfunc

    Qname = "查询 - " & queryname
    sqlstr = "SELECT * FROM [" & queryname & "]"
    ActiveSheet.UsedRange.ClearContents
    With ActiveSheet.ListObjects.Add(SourceType:=0, Source:="OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=" & queryname & ";Extended Properties=""""", Destination:=Range("$A$1")).QueryTable
        .CommandType = xlCmdSql
        .CommandText = Array(sqlstr)
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .BackgroundQuery = True
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .PreserveColumnInfo = True
        .ListObject.DisplayName = queryname
        .Refresh BackgroundQuery:=False
    End With
    
    
End Sub
